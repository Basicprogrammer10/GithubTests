name: CI
on: [push, pull_request]
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.head_ref }}
      - name: prettier
        run: npx prettier --write *.js
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Mr. Code Format'
          git config --global user.email 'codeformat@connorcode.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "ðŸ’Ž Automated Code Formatting"
          git push origin HEAD:master
  runTests:
    name: Run Unit Tests with Jest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - run: npm install
      - run: npx tsc
      - run: npx jest

  runUiTests:
    name: Run UI tests with Cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12"
      - run: npm install
      - run: node server.js --debug &
      - run: npx cypress run

  compileRust:
    name: Compile Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Run Unit Tests
        working-directory: ./test_test
        run: cargo build

  runRustTests:
    name: Run Rust Unit Tests
    runs-on: ubuntu-latest
    needs: compileRust
    steps:
      - uses: actions/checkout@v2
      
      - name: Run Unit Tests
        working-directory: ./test_test
        run: cargo test
  fossaCheck:
    runs-on: ubuntu-linux
    name: Fossa Check
    steps:
      - uses: actions/checkout@v2
      - run: "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash"
      - run: fossa init
      - run: FOSSA_API_KEY=7bff3c71cc4832d41199fbadc691958d fossa analyze
